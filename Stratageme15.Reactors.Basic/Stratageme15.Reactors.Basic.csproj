<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{E98EF953-11D3-4E67-9B25-F9ED42E98115}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Stratageme15.Reactors.Basic</RootNamespace>
    <AssemblyName>Stratageme15.Reactors.Basic</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CodeAnalysis">
      <HintPath>..\lib\Microsoft.CodeAnalysis.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.CodeAnalysis.CSharp">
      <HintPath>..\lib\Microsoft.CodeAnalysis.CSharp.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Collections.Immutable">
      <HintPath>..\lib\System.Collections.Immutable.dll</HintPath>
    </Reference>
    <Reference Include="System.Core" />
    <Reference Include="System.Reflection.Metadata">
      <HintPath>..\lib\System.Reflection.Metadata.dll</HintPath>
    </Reference>
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="BasicReactorBatch.cs" />
    <Compile Include="Declarations\ArgumentListSyntaxReactor.cs" />
    <Compile Include="Declarations\BlockSyntaxReactor.cs" />
    <Compile Include="Declarations\ClassDeclarationSyntaxReactor.cs" />
    <Compile Include="Declarations\ConstructorDeclarationSyntaxReactor.cs" />
    <Compile Include="Declarations\Field\FieldDeclarationSyntaxReactor.cs" />
    <Compile Include="Declarations\Field\FieldVariableDeclarationSyntaxReactor.cs" />
    <Compile Include="Declarations\MethodDeclarationSyntaxReactor.cs" />
    <Compile Include="Declarations\NamespaceDeclarationSyntaxReactor.cs" />
    <Compile Include="Declarations\ParameterListSyntaxReactor.cs" />
    <Compile Include="Declarations\Property\PropertyDeclarationSyntaxReactor.cs" />
    <Compile Include="Declarations\StatementBlockSyntaxReactor.cs" />
    <Compile Include="Declarations\UsingDirectiveSyntaxReactor.cs" />
    <Compile Include="Delegation\AnonymousMethodExpressionSyntaxReactor.cs" />
    <Compile Include="Delegation\ParenthesizedLambdaExpressionSyntaxReactor.cs" />
    <Compile Include="Delegation\SimpleLambdaExpressionSyntaxReactor.cs" />
    <Compile Include="Expressions\AnonymousObjectCreationExpressionSyntaxReactor.cs" />
    <Compile Include="Expressions\AnonymousObjectMemberDeclaratorSyntaxReactor.cs" />
    <Compile Include="Expressions\ArrayCreationExpressionSyntaxReactor.cs" />
    <Compile Include="Expressions\BinaryExpressionSyntaxReactor.cs" />
    <Compile Include="Expressions\BracketedArgumentListSyntaxReactor.cs" />
    <Compile Include="Expressions\ConditionalExpressionSyntaxReactor.cs" />
    <Compile Include="Expressions\ElementAccessExpressionSyntaxReactor.cs" />
    <Compile Include="Expressions\ExpressionReactorBase.cs" />
    <Compile Include="Expressions\IdentifierNameSyntaxReactor.cs" />
    <Compile Include="Expressions\ImplicitArrayCreationExpressionSyntaxReactor.cs" />
    <Compile Include="Expressions\InvocationExpressionSyntaxReactor.cs" />
    <Compile Include="Expressions\LiteralExpressionSyntaxReactor.cs" />
    <Compile Include="Expressions\MemberAccessExpressionSyntaxReactor.cs" />
    <Compile Include="Expressions\ObjectCreationExpressionSyntaxReactor.cs" />
    <Compile Include="Expressions\ParenthesizedExpressionSyntaxReactor.cs" />
    <Compile Include="Expressions\PostfixUnaryExpressionSyntaxReactor.cs" />
    <Compile Include="Expressions\PrefixUnaryExpressionSyntaxReactor.cs" />
    <Compile Include="Expressions\ThisExpressionSyntaxReactor.cs" />
    <Compile Include="Extensions\SyntaxKindExtensions.cs" />
    <Compile Include="Extensions\TranslationContextExtensions.cs" />
    <Compile Include="Extensions\TypeExtensions.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Statements\BreakStatementSyntaxReactor.cs" />
    <Compile Include="Statements\ContinueStatementSyntaxReactor.cs" />
    <Compile Include="Statements\DoStatementSyntaxReactor.cs" />
    <Compile Include="Statements\EmptyStatementSyntaxReactor.cs" />
    <Compile Include="Statements\For\ForInitializerExpressionSyntaxReactor.cs" />
    <Compile Include="Statements\For\ForStatementSyntaxReactor.cs" />
    <Compile Include="Statements\GotoStatementSyntaxReactor.cs" />
    <Compile Include="Statements\If\ElseClauseSyntaxReactor.cs" />
    <Compile Include="Statements\If\IfStatementSyntaxReactor.cs" />
    <Compile Include="Statements\LabeledStatementSyntaxReactor.cs" />
    <Compile Include="Statements\LocalDeclaration\VariableDeclarationSyntaxReactor.cs" />
    <Compile Include="Statements\LocalDeclaration\VariableDeclaratorSyntaxReactor.cs" />
    <Compile Include="Statements\ReturnStatementSyntaxReactor.cs" />
    <Compile Include="Statements\Switch\SwitchLabelSyntaxReactor.cs" />
    <Compile Include="Statements\Switch\SwitchSectionSyntaxReactor.cs" />
    <Compile Include="Statements\Switch\SwitchStatementSyntaxReactor.cs" />
    <Compile Include="Statements\ThrowStatementSyntaxReactor.cs" />
    <Compile Include="Statements\Try\CatchClauseSyntaxReactor.cs" />
    <Compile Include="Statements\Try\FinallyClauseSyntaxReactor.cs" />
    <Compile Include="Statements\Try\TryStatementSyntaxReactor.cs" />
    <Compile Include="Statements\WhileStatementSyntaxReactor.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Stratageme15.Core.JavascriptCodeDom\Stratageme15.Core.JavascriptCodeDom.csproj">
      <Project>{826D2CC0-01FF-46EB-94F0-92CEE9679DBE}</Project>
      <Name>Stratageme15.Core.JavascriptCodeDom</Name>
    </ProjectReference>
    <ProjectReference Include="..\Stratageme15.Core.Transaltion\Stratageme15.Core.Transaltion.csproj">
      <Project>{A9742331-00A6-4599-91C5-313423843619}</Project>
      <Name>Stratageme15.Core.Transaltion</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>